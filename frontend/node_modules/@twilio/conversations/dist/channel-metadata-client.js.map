{"version":3,"file":"channel-metadata-client.js","sources":["../src/channel-metadata-client.ts"],"sourcesContent":["import {\n  ChannelMetadataNotFoundError,\n  CommandExecutor,\n} from \"./command-executor\";\nimport { ChannelMetadataResponse } from \"./interfaces/commands/channel-metadata-response\";\nimport QuickLRU from \"quick-lru\";\nimport { Configuration } from \"./configuration\";\n\ntype ChannelMetadataClientServices = {\n  commandExecutor: CommandExecutor;\n};\n\ntype CacheEntry = {\n  item: ChannelMetadata | null;\n};\n\n/**\n * Represents channel metadata.\n */\nclass ChannelMetadata {\n  /**\n   * Communication channel type.\n   */\n  public readonly type: string;\n\n  /**\n   * The actual metadata.\n   */\n  public readonly data: unknown;\n\n  /**\n   * @internal\n   */\n  public constructor(type: string, data: unknown) {\n    this.type = type;\n    this.data = data;\n\n    Object.freeze(data);\n  }\n}\n\nclass ChannelMetadataClient {\n  private readonly _services: ChannelMetadataClientServices;\n  private readonly _configuration: Configuration;\n  private readonly _cache: QuickLRU<string, CacheEntry>;\n\n  public constructor(\n    services: ChannelMetadataClientServices,\n    configuration: Configuration\n  ) {\n    this._services = services;\n    this._configuration = configuration;\n    this._cache = new QuickLRU({\n      maxSize: configuration.channelMetadataCacheCapacity,\n    });\n  }\n\n  public async getChannelMetadata(\n    conversationSid: string,\n    messageSid: string\n  ): Promise<ChannelMetadata | null> {\n    const key = `${conversationSid},${messageSid}`;\n    const cachedItem = this._cache.get(key);\n\n    if (cachedItem) {\n      return cachedItem.item;\n    }\n\n    const url = `${this._configuration.links.conversations}/${conversationSid}/Messages/${messageSid}/ChannelMetadata`;\n    let metadataResponse: ChannelMetadataResponse;\n\n    try {\n      metadataResponse = await this._services.commandExecutor.fetchResource<\n        void,\n        ChannelMetadataResponse\n      >(url);\n    } catch (e) {\n      if (e instanceof ChannelMetadataNotFoundError) {\n        this._cache.set(key, { item: null });\n        return null;\n      }\n\n      throw new Error(e);\n    }\n\n    const metadata = new ChannelMetadata(\n      metadataResponse.type,\n      metadataResponse.data\n    );\n    this._cache.set(key, { item: metadata });\n    return metadata;\n  }\n}\n\nexport { ChannelMetadataClient, ChannelMetadata };\n"],"names":["QuickLRU","ChannelMetadataNotFoundError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;AAEG;AACH,MAAM,eAAe,CAAA;AAWnB;;AAEG;IACH,WAAmB,CAAA,IAAY,EAAE,IAAa,EAAA;AAC5C,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAEjB,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACrB;AACF,CAAA;AAED,MAAM,qBAAqB,CAAA;IAKzB,WACE,CAAA,QAAuC,EACvC,aAA4B,EAAA;AAE5B,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAA,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACpC,QAAA,IAAI,CAAC,MAAM,GAAG,IAAIA,gBAAQ,CAAC;YACzB,OAAO,EAAE,aAAa,CAAC,4BAA4B;AACpD,SAAA,CAAC,CAAC;KACJ;AAEM,IAAA,MAAM,kBAAkB,CAC7B,eAAuB,EACvB,UAAkB,EAAA;AAElB,QAAA,MAAM,GAAG,GAAG,CAAA,EAAG,eAAe,CAAI,CAAA,EAAA,UAAU,EAAE,CAAC;QAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAExC,QAAA,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC,IAAI,CAAC;AACxB,SAAA;AAED,QAAA,MAAM,GAAG,GAAG,CAAG,EAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,CAAI,CAAA,EAAA,eAAe,CAAa,UAAA,EAAA,UAAU,kBAAkB,CAAC;AACnH,QAAA,IAAI,gBAAyC,CAAC;QAE9C,IAAI;AACF,YAAA,gBAAgB,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,aAAa,CAGnE,GAAG,CAAC,CAAC;AACR,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,YAAYC,4CAA4B,EAAE;AAC7C,gBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AACrC,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AAED,YAAA,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,SAAA;AAED,QAAA,MAAM,QAAQ,GAAG,IAAI,eAAe,CAClC,gBAAgB,CAAC,IAAI,EACrB,gBAAgB,CAAC,IAAI,CACtB,CAAC;AACF,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACzC,QAAA,OAAO,QAAQ,CAAC;KACjB;AACF;;;;;"}