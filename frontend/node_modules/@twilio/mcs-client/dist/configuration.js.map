{"version":3,"file":"configuration.js","sources":["../src/configuration.ts"],"sourcesContent":["import * as log from \"loglevel\";\nimport { Transport } from \"./services/transport\";\n\nconst MINIMUM_RETRY_DELAY = 1000;\nconst MAXIMUM_RETRY_DELAY = 4000;\nconst MAXIMUM_ATTEMPTS_COUNT = 3;\nconst RETRY_WHEN_THROTTLED = true;\n\nconst regionalMcsHost = (region?: string): string =>\n  `https://mcs.${region ?? \"us1\"}.twilio.com`;\n\nconst isFullUrl = (url: string): boolean => url.startsWith(\"http\");\n\nconst fullUrl = (partUrl: string, region?: string): string =>\n  `${!isFullUrl(partUrl) ? regionalMcsHost(region) : \"\"}${partUrl}`;\n\nexport interface BackoffOverride {\n  max: number;\n  min: number;\n  maxAttemptsCount?: number;\n}\n\nexport interface McsOptions {\n  region?: string;\n  retryWhenThrottledOverride?: boolean;\n  backoffConfigOverride?: BackoffOverride;\n}\n\nexport interface Options {\n  region?: string;\n  logLevel?: log.LogLevelDesc;\n  transport?: Transport;\n  retryWhenThrottledOverride?: boolean;\n  backoffConfigOverride?: BackoffOverride;\n  MCS?: McsOptions;\n}\n\nclass Configuration {\n  token: string;\n  public readonly retryWhenThrottledOverride: boolean;\n  public readonly backoffConfigOverride: BackoffOverride;\n  public readonly mediaUrl: string;\n  public readonly mediaSetUrl: string;\n  private readonly region: string;\n\n  constructor(\n    token: string,\n    baseUrl: string,\n    baseSetUrl: string | null,\n    options: Options\n  ) {\n    const constructorOptions = options.MCS ?? options ?? {};\n    this.region = constructorOptions.region ?? options.region ?? 'us1';\n    this.mediaUrl = fullUrl(baseUrl, this.region);\n    this.mediaSetUrl = baseSetUrl ? fullUrl(baseSetUrl) : `${this.mediaUrl}Set`;\n    this.token = token;\n    this.retryWhenThrottledOverride =\n      constructorOptions.retryWhenThrottledOverride ?? RETRY_WHEN_THROTTLED;\n    this.backoffConfigOverride = constructorOptions.backoffConfigOverride ?? Configuration.backoffConfigDefault;\n  }\n\n  public static get backoffConfigDefault(): BackoffOverride {\n    return {\n      min: MINIMUM_RETRY_DELAY,\n      max: MAXIMUM_RETRY_DELAY,\n      maxAttemptsCount: MAXIMUM_ATTEMPTS_COUNT,\n    };\n  }\n\n  public static get retryWhenThrottledDefault(): boolean {\n    return RETRY_WHEN_THROTTLED;\n  }\n\n  public updateToken(token: string): void {\n    this.token = token;\n  }\n}\n\nexport { Configuration };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAM,mBAAmB,GAAG,IAAI,CAAC;AACjC,MAAM,mBAAmB,GAAG,IAAI,CAAC;AACjC,MAAM,sBAAsB,GAAG,CAAC,CAAC;AACjC,MAAM,oBAAoB,GAAG,IAAI,CAAC;AAElC,MAAM,eAAe,GAAG,CAAC,MAAe,KACtC,CAAA,YAAA,EAAe,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,MAAM,GAAI,KAAK,aAAa,CAAC;AAE9C,MAAM,SAAS,GAAG,CAAC,GAAW,KAAc,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAEnE,MAAM,OAAO,GAAG,CAAC,OAAe,EAAE,MAAe,KAC/C,CAAA,EAAG,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC,GAAG,EAAE,CAAG,EAAA,OAAO,EAAE,CAAC;AAuBpE,MAAM,aAAa,CAAA;AAQjB,IAAA,WAAA,CACE,KAAa,EACb,OAAe,EACf,UAAyB,EACzB,OAAgB,EAAA;;QAEhB,MAAM,kBAAkB,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,GAAG,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,OAAO,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;AACxD,QAAA,IAAI,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,MAAA,kBAAkB,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,OAAO,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,KAAK,CAAC;QACnE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,WAAW,GAAG,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAA,EAAG,IAAI,CAAC,QAAQ,KAAK,CAAC;AAC5E,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,0BAA0B;AAC7B,YAAA,CAAA,EAAA,GAAA,kBAAkB,CAAC,0BAA0B,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,oBAAoB,CAAC;QACxE,IAAI,CAAC,qBAAqB,GAAG,CAAA,EAAA,GAAA,kBAAkB,CAAC,qBAAqB,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,aAAa,CAAC,oBAAoB,CAAC;KAC7G;AAEM,IAAA,WAAW,oBAAoB,GAAA;QACpC,OAAO;AACL,YAAA,GAAG,EAAE,mBAAmB;AACxB,YAAA,GAAG,EAAE,mBAAmB;AACxB,YAAA,gBAAgB,EAAE,sBAAsB;SACzC,CAAC;KACH;AAEM,IAAA,WAAW,yBAAyB,GAAA;AACzC,QAAA,OAAO,oBAAoB,CAAC;KAC7B;AAEM,IAAA,WAAW,CAAC,KAAa,EAAA;AAC9B,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;AACF;;;;"}