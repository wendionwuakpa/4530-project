{"version":3,"file":"network.js","sources":["../../src/services/network.ts"],"sourcesContent":["import { Retrier } from \"@twilio/operation-retrier\";\nimport { Logger } from \"../logger\";\nimport { Configuration } from \"../configuration\";\nimport { Transport } from \"./transport\";\nimport { MediaCategory } from \"../media\";\nimport { CancellablePromise } from \"../cancellable-promise\";\n\nconst log = Logger.scope(\"Network\");\n\nclass Network {\n  private readonly config: Configuration;\n  private readonly transport: Transport;\n\n  constructor(config: Configuration, transport: Transport) {\n    this.config = config;\n    this.transport = transport;\n  }\n\n  private backoffConfig() {\n    return Object.assign(\n      Configuration.backoffConfigDefault,\n      this.config.backoffConfigOverride\n    );\n  }\n\n  private retryWhenThrottled(): boolean {\n    return (\n      this.config.retryWhenThrottledOverride ??\n      Configuration.retryWhenThrottledDefault ??\n      false\n    );\n  }\n\n  private executeWithRetry(\n    request,\n    retryWhenThrottled: boolean\n  ): CancellablePromise<any> {\n    return new CancellablePromise(async (resolve, reject, onCancel) => {\n      const retrier = new Retrier(this.backoffConfig());\n\n      const codesToRetryOn = [502, 503, 504];\n      if (retryWhenThrottled) {\n        codesToRetryOn.push(429);\n      }\n\n      onCancel(() => {\n        retrier.cancel();\n        retrier.removeAllListeners();\n      });\n\n      retrier.on(\"attempt\", async () => {\n        try {\n          const requestPromise = request();\n\n          onCancel(() => {\n            requestPromise.cancel();\n            retrier.cancel();\n            retrier.removeAllListeners();\n          });\n\n          const result = await requestPromise;\n          retrier.succeeded(result);\n        } catch (err) {\n          if (codesToRetryOn.indexOf(err.status) > -1) {\n            retrier.failed(err);\n          } else if (err.message === \"Twilsock disconnected\") {\n            // Ugly hack. We must make a proper exceptions for twilsock\n            retrier.failed(err);\n          } else {\n            // Fatal error\n            retrier.removeAllListeners();\n            retrier.cancel();\n            reject(err);\n          }\n        }\n      });\n\n      retrier.on(\"succeeded\", (result) => {\n        resolve(result);\n      });\n      retrier.on(\"cancelled\", (err) => reject(err));\n      retrier.on(\"failed\", (err) => reject(err));\n\n      retrier.start();\n    });\n  }\n\n  public get(url: string): CancellablePromise<any> {\n    return new CancellablePromise(async (resolve, reject, onCancel) => {\n      const headers = { \"X-Twilio-Token\": this.config.token };\n      const request = this.executeWithRetry(\n        () => this.transport.get(url, headers),\n        this.retryWhenThrottled()\n      );\n      log.trace(\"sending GET request to \", url, \" headers \", headers);\n\n      onCancel(() => request.cancel());\n\n      try {\n        const response = await request;\n        log.trace(\"response\", response);\n        resolve(response);\n      } catch (err) {\n        log.debug(`get() error ${err}`);\n        reject(err);\n      }\n    });\n  }\n\n  public post(\n    url: string,\n    category: MediaCategory | null,\n    media: string | Buffer | Blob | FormData | Record<string, unknown>,\n    contentType?: string,\n    filename?: string\n  ): CancellablePromise<any> {\n    const headers = {\n      \"X-Twilio-Token\": this.config.token,\n    };\n\n    if (\n      (typeof FormData === \"undefined\" || !(media instanceof FormData)) &&\n      contentType\n    ) {\n      Object.assign(headers, {\n        \"Content-Type\": contentType,\n      });\n    }\n\n    const fullUrl = new URL(url);\n    if (category) {\n      fullUrl.searchParams.append(\"Category\", category);\n    }\n    if (filename) {\n      fullUrl.searchParams.append(\"Filename\", filename);\n    }\n\n    return new CancellablePromise(async (resolve, reject, onCancel) => {\n      const request = this.transport.post(fullUrl.href, headers, media);\n\n      onCancel(() => request.cancel());\n\n      log.trace(`sending POST request to ${url} with headers ${headers}`);\n      let response;\n      try {\n        response = await request;\n      } catch (err) {\n        // If global[\"XMLHttpRequest\"] is undefined, it means that the code is\n        // not being executed in the browser.\n        if (\n          global[\"XMLHttpRequest\"] === undefined &&\n          media instanceof FormData\n        ) {\n          reject(\n            new TypeError(\n              \"Posting FormData supported only with browser engine's FormData\"\n            )\n          );\n          return;\n        }\n        log.debug(`post() error ${err}`);\n        reject(err);\n        return;\n      }\n      log.trace(\"response\", response);\n      resolve(response);\n    });\n  }\n}\n\nexport { Network };\n"],"names":["Logger","Configuration","CancellablePromise","Retrier"],"mappings":"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"}